<?xml version="1.0" encoding="utf-8"?>
<project name="One-Web-Boilerplate" default="build.less.require.dev" basedir="../"> <!-- one back since we're in /build -->

    <!-- build.xml for one web boilerplate https://github.com/akikoo/one-web-boilerplate -->

    <description>JS/CSS Dev Build for One-Web-Boilerplate</description>


    <!-- 
    ****************************************************************************
    * CONFIG 
    ****************************************************************************
    -->

    <!-- Load Project config properties for this build -->
    <property file="build/config/project.properties"/>
    
    <!-- Load in Ant-Contrib to give us access to some very useful tasks -->
    <!-- the .jar file is located in the tools directory -->
    <!-- See http://ant-contrib.sourceforge.net/ -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${tool.antcontrib}"/>
        </classpath>
    </taskdef>

    <!-- This is the jsdocs task --> 
    <!-- Using an Ant task wrapper around the JsDoc Toolkit application -->
    <!-- See http://code.google.com/p/jsdoc-toolkit-ant-task/ -->
    <taskdef 
        name="jsdoctoolkit" 
        classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit" 
        classpath="${tool.jsdoc.ant.task};${tool.jsdoc.js.jar}"
    />


    <!-- Import all macros -->
    <import>
        <fileset dir="${build.dir}/${macros.dir}" includes="*.xml" />
    </import>


    <!-- Process order: init, HTML, LESS, CSSLint, JSHint, JSDoc, optimize, copy images, cleanup -->
    <target name="build.less.require.dev" description="(PRIVATE) calls all Dev site macrodefs">

            <!-- 1. Initialize the build -->
            <utils.init />
            <html.useminified />

            <!-- 2. Process HTML -->
                <!-- 2.a Generate HTML -->
                <html.compile.shtml.modules />
                <html.compile.shtml.pages />

                <!-- 2.b Generate component, module, page and template lists -->
                <html.list.components />
                <html.list.modules />
                <html.list.pages />
                <html.list.templates />

                <!-- 2.c Generate module list for the styleguide page -->
                <html.list.modules.inc />

                <!-- 2.d Minify HTML -->
                <html.minify /> 

                <!-- 2.e Revert to dev HTML -->
                <html.useseparate />

            <!-- 3. Process CSS -->
            <css.compile.less />
            <css.lint />

            <!-- 4. Process JS -->
            <js.hint />
            <js.jsdoc />

            <!-- 5. Optimize CSS and JS -->
            <utils.optimize />

            <!-- 6. Merge almond.js with config.js, to have everything in one file -->
            <js.concat />

            <!-- 7. Copy images -->
            <img.copy />

            <!-- 8. Cleanup now that we've finished the build -->
            <utils.cleanup />

    </target>

</project>